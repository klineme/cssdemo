events:

elem.addeventlistener(string, fn(){})
 ex:

btn.addeventlistener("click", fn(event){
    event.preventDefault();
    var x = event.target; -> Will return target if there were multiples
}
event bubbling: when the parent captures the event rather than the child
HOISTING!@?!@!?@?!@!@!@!?@?
var i = 1;

fn(){
    var i = 2; LOCAL TO THIS FUNCTION
    c.log(i);
}

vvvv

fn(){
    c.log(i); i is undefined because it's being HOISTED, being declated before
    var i = 2;
}

AJAX

Asynchronous JS and XML

Basic IDEA: DOn't need to
refresh the whole damn page
every time it neds to update

xmlhttprequest
xhr
Message Envelope
(don't just send username, send a whole msg)
COMMON HTTP VERBS
    GET, POST, PUT, DELETE

    GET - ready
    POST - write, update
    PUT - insert, write, update (A little more safe)
    DELETE

.setRequestHeaders("Accept", "application/json")
                                content type
    Headers
        Content Type:


Error code ranges

MLHTTPrequest.status ?
100 - info
200 - success
300 - redirect
400 - client-side
500 - server-side

.readyState
0 - init
1 - just sent it
2 - Headers of msg received
3 - Server received message (payload)
4 - done, complete (succeeded or failed)

var xhr = new___();
if(xhr.readdyState == 4 && xhr.status == 200)

xhr.onreadystatechange = fn(){

}
xhr.open("Action", url, isAsync)
xhr.send(datatoserver)